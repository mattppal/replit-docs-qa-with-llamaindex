{"docstore/data": {"a51c74cb-d92d-4f9e-9754-4eb38dbce96e": {"__data__": {"id_": "a51c74cb-d92d-4f9e-9754-4eb38dbce96e", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "c57b170bceb5f352f1f9c06c84a0f3c5c44453c4d8b5218b7c89cfa919e04f6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd927b73-f346-47f9-a4b3-bc027fc5949b", "node_type": "1", "metadata": {}, "hash": "a9161ad5ec58546e04621d7dd21ef1615d0503dcfdb3f063a62abcd838176122", "class_name": "RelatedNodeInfo"}}, "hash": "2f846ce479f4a0750b7f585badc6f1c1a25653310019c1e372abc0e8184025aa", "text": "align-items\n\ncenter\n\nfont-size\n\n1.5\n\nrem\n\nfont-weight\n\nbold\n\nletter-spacing\n\n0.5\n\npx\n\nposition\n\nrelative\n\ncursor\n\npointer\n\nmax-width\n\n40\n\nrem\n\n.label\n\nposition\n\nabsolute\n\nfont-size\n\n0.75\n\nrem\n\nleft\n\nrem\n\ntop\n\nrem\n\nopacity\n\n0.5\n\ntext-transform\n\nuppercase\n\nfont-weight\n\nbold\n\n.input\n\nborder-radius\n\npx\n\nfont-weight\n\nbold\n\npadding\n\nrem\n\n0.75\n\nrem\n\n0.75\n\nrem\n\nwidth\n\n100\n\nfont-size\n\n1.5\n\nrem\n\nbox-shadow\n\npx\n\n#fc47bb\n\n.controls\n\ndisplay\n\nflex\n\njustify-content\n\nspace-between\n\npadding\n\nrem\n\nflex-wrap\n\nwrap\n\n.button\n\nborder-radius\n\npx\n\npadding\n\nrem\n\nfont-size\n\nrem\n\nfont-family\n\n\"Montserrat\"\n\nsans-serif\n\nfont-weight\n\nbold\n\nwhite-space\n\nnowrap\n\ncursor\n\npointer\n\nmargin\n\n0.5\n\nrem\n\n.button\n\n:disabled\n\ncursor\n\nnot-allowed\n\n.button\n\n:not\n\n:disabled\n\n:hover\n\nbackground\n\n#ccc\n\n.list\n\nmargin\n\n1\n\nrem\n\ndisplay\n\nflex\n\nflex-wrap\n\nwrap\n\npadding\n\nrem\n\nrem\n\n.pin\n\nposition\n\nrelative\n\npadding\n\nrem\n\nwidth\n\n100\n\n@media\n\nmin-width\n\n40\n\nrem\n\n.pin\n\nwidth\n\n50\n\n@media\n\nmin-width\n\n65\n\nrem\n\n.pin\n\nwidth\n\n33.333333333333\n\n@media\n\nmin-width\n\n100\n\nrem\n\n.pin\n\nwidth\n\n25\n\n.info\n\nposition\n\nabsolute\n\nbottom\n\nleft\n\nwidth\n\n100\n\nopacity\n\ntransition\n\nopacity\n\n0.3\n\ntransform\n\n0.3\n\nlist-style\n\nnone\n\npadding\n\ndisplay\n\nflex\n\njustify-content\n\ncenter\n\nflex-wrap\n\nwrap\n\ntransform\n\ntranslateY\n\nrem\n\n.pin\n\n:hover\n\n.info\n\nopacity\n\ntransform\n\ntranslateY\n\n1\n\nrem\n\n.remove\n\nposition\n\nabsolute\n\nright\n\nrem\n\ntop\n\nrem\n\nborder-radius\n\n50\n\ndisplay\n\nflex\n\nalign-items\n\ncenter\n\njustify-content\n\ncenter\n\nheight\n\n2.5\n\nrem\n\nwidth\n\n2.5\n\nrem\n\nfont-size\n\n1.5\n\nrem\n\nfont-weight\n\nbold\n\nfont-family\n\n\"Montserrat\"\n\nsans-serif\n\ncursor\n\npointer\n\nopacity\n\ntransition\n\nopacity\n\n0.3\n\ntransform\n\n0.3\n\ntransform\n\ntranslateY\n\n1\n\nrem\n\n.pin\n\n:hover\n\n.remove\n\ntransform\n\ntranslateY\n\nopacity\n\n.remove\n\n:hover\n\nbackground\n\n#ccc\n\n.image\n\nwidth\n\n100\n\nheight\n\n20\n\nrem\n\nobject-fit\n\ncover\n\nbox-shadow\n\npx\n\npx\n\nrgba\n\n0.2\n\nborder-radius\n\npx\n\nbackground-color\n\n#d18c8c\n\n.tag\n\nmargin\n\n0.5\n\nrem\n\nborder-radius\n\n15\n\npx\n\npadding\n\nrem\n\nfont-size\n\nrem\n\nfont-family\n\n\"Montserrat\"\n\nsans-serif\n\nfont-weight\n\nbold\n\ncursor\n\npointer\n\ntext-transform\n\ncapitalize\n\n.tag\n\n:hover\n\nbackground\n\n#ccc\n\n.overlay\n\nposition\n\nfixed\n\nbackground\n\nrgba\n\n0.7\n\ntop\n\nleft\n\nheight\n\n100\n\nwidth\n\n100\n\ndisplay\n\nflex\n\nalign-items\n\ncenter\n\njustify-content\n\ncenter\n\nbox-shadow\n\npx\n\n11\n\npx\n\n15\n\npx\n\n7\n\npx\n\nrgba\n\n0.2\n\npx\n\n24\n\npx\n\n38\n\npx\n\npx\n\nrgba\n\n0.14\n\npx\n\npx\n\n46\n\npx\n\npx\n\nrgba\n\n0.12\n\n.form\n\nbackground\n\nwhite\n\nwidth\n\n100\n\nmax-width\n\n40\n\nrem\n\nborder-radius\n\n16\n\npx\n\n.dialog-list\n\nlist-style\n\nnone\n\npadding\n\nrem\n\n.dialog-item\n\npadding\n\nrem\n\ntext-align\n\ncenter\n\n.helper\n\ndisplay\n\nblock\n\npadding\n\n0.75\n\nrem\n\nopacity\n\n0.6\n\n.hidden\n\ndisplay\n\nnone\n\nAfter adding the above code to style.css, open your\u00a0index.html\u00a0file and replace all of the existing code with the following snippet.\n\n<!\n\nDOCTYPE\n\nhtml\n\nhtml\n\nhead\n\nmeta\n\ncharset\n\nutf-8\n\n/>\n\ntitle\n\nMy Moodboard\n\n</\n\ntitle\n\nmeta\n\nname\n\nviewport\n\ncontent\n\nwidth=device-width, initial-scale=1.0\n\n/>\n\nlink\n\nrel\n\nstylesheet\n\nhref\n\n./style.css\n\n/>\n\nscript\n\nsrc\n\n./script.js\n\ndefer\n\n</\n\nscript\n\nlink\n\nrel\n\npreconnect\n\nhref\n\nhttps://fonts.gstatic.com\n\n/>\n\nlink\n\nhref\n\nhttps://fonts.googleapis.com/css2?family=Bungee+Shade&family=Montserrat:wght@400;", "start_char_idx": 0, "end_char_idx": 3163, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fd927b73-f346-47f9-a4b3-bc027fc5949b": {"__data__": {"id_": "fd927b73-f346-47f9-a4b3-bc027fc5949b", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "c57b170bceb5f352f1f9c06c84a0f3c5c44453c4d8b5218b7c89cfa919e04f6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a51c74cb-d92d-4f9e-9754-4eb38dbce96e", "node_type": "1", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "2f846ce479f4a0750b7f585badc6f1c1a25653310019c1e372abc0e8184025aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e7fa5fc-e724-47de-8ca3-a8309a3ddc87", "node_type": "1", "metadata": {}, "hash": "5334768a94dd018ab25545c6671b104b176e3622a188f65911e233c249ae6dfc", "class_name": "RelatedNodeInfo"}}, "hash": "a9161ad5ec58546e04621d7dd21ef1615d0503dcfdb3f063a62abcd838176122", "text": "<!\n\nDOCTYPE\n\nhtml\n\nhtml\n\nhead\n\nmeta\n\ncharset\n\nutf-8\n\n/>\n\ntitle\n\nMy Moodboard\n\n</\n\ntitle\n\nmeta\n\nname\n\nviewport\n\ncontent\n\nwidth=device-width, initial-scale=1.0\n\n/>\n\nlink\n\nrel\n\nstylesheet\n\nhref\n\n./style.css\n\n/>\n\nscript\n\nsrc\n\n./script.js\n\ndefer\n\n</\n\nscript\n\nlink\n\nrel\n\npreconnect\n\nhref\n\nhttps://fonts.gstatic.com\n\n/>\n\nlink\n\nhref\n\nhttps://fonts.googleapis.com/css2?family=Bungee+Shade&family=Montserrat:wght@400;700&display=swap\n\nrel\n\nstylesheet\n\n/>\n\n</\n\nhead\n\nbody\n\nid\n\napp\n\ndatalist\n\nid\n\nexisting-tags\n\noption\n\nEngineering\n\n</\n\noption\n\noption\n\nHeadphones\n\n</\n\noption\n\noption\n\nWellness\n\n</\n\noption\n\noption\n\nOcean\n\n</\n\noption\n\noption\n\nOffice\n\n</\n\noption\n\noption\n\nCoding\n\n</\n\noption\n\noption\n\nDesk\n\n</\n\noption\n\noption\n\nBoxing\n\n</\n\noption\n\noption\n\nLab\n\n</\n\noption\n\n</\n\ndatalist\n\nheader\n\nh1\n\nclass\n\ntitle\n\nMy Moodboard\n\n</\n\nh1\n\ndiv\n\nclass\n\ncontrols\n\nlabel\n\nclass\n\nfield\n\nfor\n\nfilter-input\n\nspan\n\nclass\n\nlabel\n\nFilter\n\n</\n\nspan\n\ninput\n\ntype\n\nsearch\n\nid\n\nfilter-input\n\nclass\n\ninput\n\nlist\n\nexisting-tags\n\nplaceholder\n\nNone\n\n/>\n\n</\n\nlabel\n\nbutton\n\nclass\n\nbutton\n\nid\n\ndialog-start\n\nAdd New Image\n\n</\n\nbutton\n\n</\n\ndiv\n\n</\n\nheader\n\nmain\n\ndiv\n\nclass\n\nlist\n\nid\n\npins-list\n\nsection\n\nclass\n\npin\n\nimg\n\nclass\n\nimage\n\nsrc\n\nhttps://images.unsplash.com/photo-1580983218765-f663bec07b37?w=600\n\n/>\n\nul\n\nclass\n\ninfo\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\nengineering\n\n</\n\nbutton\n\n</\n\nli\n\n</\n\nul\n\nbutton\n\nclass\n\nremove\n\naria-label\n\nremove\n\nvalue\n\n122203215486581930752615279550\n\n&#10005;\n\n</\n\nbutton\n\n</\n\nsection\n\nsection\n\nclass\n\npin\n\nimg\n\nclass\n\nimage\n\nsrc\n\nhttps://images.unsplash.com/photo-1572932491814-4833690788ad?w=600\n\n/>\n\nul\n\nclass\n\ninfo\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\nheadphones\n\n</\n\nbutton\n\n</\n\nli\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\nocean\n\n</\n\nbutton\n\n</\n\nli\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\nwellness\n\n</\n\nbutton\n\n</\n\nli\n\n</\n\nul\n\nbutton\n\nclass\n\nremove\n\naria-label\n\nremove\n\nvalue\n\n144685389103194178251333634000\n\n&#10005;\n\n</\n\nbutton\n\n</\n\nsection\n\nsection\n\nclass\n\npin\n\nimg\n\nclass\n\nimage\n\nsrc\n\nhttps://images.unsplash.com/photo-1580894908361-967195033215?w=600\n\n/>\n\nul\n\nclass\n\ninfo\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\noffice\n\n</\n\nbutton\n\n</\n\nli\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\ncoding\n\n</\n\nbutton\n\n</\n\nli\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\ndesk\n\n</\n\nbutton\n\n</\n\nli\n\n</\n\nul\n\nbutton\n\nclass\n\nremove\n\naria-label\n\nremove\n\nvalue\n\n159279541173033634211014623228\n\n&#10005;\n\n</\n\nbutton\n\n</\n\nsection\n\nsection\n\nclass\n\npin\n\nimg\n\nclass\n\nimage\n\nsrc\n\nhttps://images.unsplash.com/photo-1584464491033-06628f3a6b7b?w=600\n\n/>\n\nul\n\nclass\n\ninfo\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\nboxing\n\n</\n\nbutton\n\n</\n\nli\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\nwellness\n\n</\n\nbutton\n\n</\n\nli\n\n</\n\nul\n\nbutton\n\nclass\n\nremove\n\naria-label\n\nremove\n\nvalue\n\n75261220651273643680893699100\n\n&#10005;\n\n</\n\nbutton\n\n</\n\nsection\n\nsection\n\nclass\n\npin\n\nimg\n\nclass\n\nimage\n\nsrc\n\nhttps://images.unsplash.", "start_char_idx": 2756, "end_char_idx": 5646, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e7fa5fc-e724-47de-8ca3-a8309a3ddc87": {"__data__": {"id_": "8e7fa5fc-e724-47de-8ca3-a8309a3ddc87", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "c57b170bceb5f352f1f9c06c84a0f3c5c44453c4d8b5218b7c89cfa919e04f6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd927b73-f346-47f9-a4b3-bc027fc5949b", "node_type": "1", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "a9161ad5ec58546e04621d7dd21ef1615d0503dcfdb3f063a62abcd838176122", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3cf83362-03c9-4863-aece-ee37e37b7c60", "node_type": "1", "metadata": {}, "hash": "cd63c08a218ff0d02e361caacc0c7eabd52f3d55841ad722f3dd152f26d38b80", "class_name": "RelatedNodeInfo"}}, "hash": "5334768a94dd018ab25545c6671b104b176e3622a188f65911e233c249ae6dfc", "text": "</\n\nbutton\n\n</\n\nsection\n\nsection\n\nclass\n\npin\n\nimg\n\nclass\n\nimage\n\nsrc\n\nhttps://images.unsplash.com/photo-1584464491033-06628f3a6b7b?w=600\n\n/>\n\nul\n\nclass\n\ninfo\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\nboxing\n\n</\n\nbutton\n\n</\n\nli\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\nwellness\n\n</\n\nbutton\n\n</\n\nli\n\n</\n\nul\n\nbutton\n\nclass\n\nremove\n\naria-label\n\nremove\n\nvalue\n\n75261220651273643680893699100\n\n&#10005;\n\n</\n\nbutton\n\n</\n\nsection\n\nsection\n\nclass\n\npin\n\nimg\n\nclass\n\nimage\n\nsrc\n\nhttps://images.unsplash.com/photo-1581094271901-8022df4466f9?w=600\n\n/>\n\nul\n\nclass\n\ninfo\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\nlab\n\n</\n\nbutton\n\n</\n\nli\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\nengineering\n\n</\n\nbutton\n\n</\n\nli\n\n</\n\nul\n\nbutton\n\nclass\n\nremove\n\naria-label\n\nremove\n\nvalue\n\n161051747537834597427464147310\n\n&#10005;\n\n</\n\nbutton\n\n</\n\nsection\n\n</\n\ndiv\n\n</\n\nmain\n\ndialog\n\nid\n\ndialog\n\nclass\n\noverlay hidden\n\nform\n\nid\n\ndialog-form\n\nclass\n\nform\n\ndiv\n\nclass\n\ndialog-item\n\nlabel\n\nclass\n\nfield\n\nfor\n\ndialog-image\n\nspan\n\nclass\n\nlabel\n\nImage URL\n\n</\n\nspan\n\ninput\n\nclass\n\ninput\n\ntype\n\nurl\n\nid\n\ndialog-image\n\n/>\n\n</\n\nlabel\n\nem\n\nclass\n\nhelper\n\nFor example:\n\nhttps://images.unsplash.com/photo-1584464491033-06628f3a6b7b\n\n</\n\nem\n\n</\n\ndiv\n\ndiv\n\nclass\n\ndialog-item\n\nlabel\n\nclass\n\nfield\n\nfor\n\ndialog-tags\n\nspan\n\nclass\n\nlabel\n\nTags\n\n</\n\nspan\n\ninput\n\nclass\n\ninput\n\ntype\n\ntext\n\nid\n\ndialog-tags\n\n/>\n\n</\n\nlabel\n\nem\n\nclass\n\nhelper\n\nSeparate multiple tags with commas. For example: engineering,\n\ncoding\n\n</\n\nem\n\n</\n\ndiv\n\ndiv\n\nclass\n\ndialog-item\n\nbutton\n\ntype\n\nsubmit\n\nclass\n\nbutton\n\nid\n\ndialog-submit\n\ndisabled\n\nSave Image\n\n</\n\nbutton\n\n</\n\ndiv\n\n</\n\nform\n\n</\n\ndialog\n\n</\n\nbody\n\n</\n\nhtml\n\nYikes! That is quite a lot of HTML and CSS. Regardless, if you run your repl (with the big Run button at the top) you should see your project spring to life, as shown below.\n\nYou can click the Open in new tab button at the far top right to open your project in a separate browser tab as follows:\n\nMarkup\u200b\n\nLet's walk through the above code step by step, starting with the HTML.\n\nHead\u200b\n\nOur HTML starts off with a <!DOCTYPE html> and a <html> element. These signal to the browser that we are using modern HTML.\n\nInside the <html> element, we see another element titled <head>. This element is used to communicate meta information to the browser. The elements inside it won't be shown to the user but provide the browser with useful commands to run before the user-facing HTML content is created. Our <head> element has the following nested elements:\n\nhead\n\nmeta\n\ncharset\n\nutf-8\n\n/>\n\ntitle\n\nMy Moodboard\n\n</\n\ntitle\n\nmeta\n\nname\n\nviewport\n\ncontent\n\nwidth=device-width, initial-scale=1.0\n\n/>\n\nlink\n\nrel\n\nstylesheet\n\nhref\n\n./style.css\n\n/>\n\nscript\n\nsrc\n\n./script.js\n\ndefer\n\n</\n\nscript\n\nlink\n\nrel\n\npreconnect\n\nhref\n\nhttps://fonts.gstatic.com\n\n/>\n\nlink\n\nhref\n\nhttps://fonts.googleapis.com/css2?family=Bungee+Shade&family=Montserrat:wght@400;700&display=swap\n\nrel\n\nstylesheet\n\n/>\n\n</\n\nhead\n\nThe first <meta> element determines the character types that should be used by the browser. This is required in all HTML documents, and is almost always set to \"utf-8\".\n\nThe <title> element determines the name that is shown on in a user's browser tab. It is also used by search engines and accessibility devices as the name of the page.\n\nThe second <meta> element tells the browser to not automatically scale the size of our content. This is required for styling to look the same across several screen sizes such as a desktop computer and mobile phone (called responsive web design).", "start_char_idx": 5154, "end_char_idx": 8659, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cf83362-03c9-4863-aece-ee37e37b7c60": {"__data__": {"id_": "3cf83362-03c9-4863-aece-ee37e37b7c60", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "c57b170bceb5f352f1f9c06c84a0f3c5c44453c4d8b5218b7c89cfa919e04f6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e7fa5fc-e724-47de-8ca3-a8309a3ddc87", "node_type": "1", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "5334768a94dd018ab25545c6671b104b176e3622a188f65911e233c249ae6dfc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11923779-b15c-4af6-bc11-32bcf6755695", "node_type": "1", "metadata": {}, "hash": "0f062ca13644ae9f8bcfa7ca78e7f2de8b9d8d437f379384341449ed681f6962", "class_name": "RelatedNodeInfo"}}, "hash": "cd63c08a218ff0d02e361caacc0c7eabd52f3d55841ad722f3dd152f26d38b80", "text": "This is required in all HTML documents, and is almost always set to \"utf-8\".\n\nThe <title> element determines the name that is shown on in a user's browser tab. It is also used by search engines and accessibility devices as the name of the page.\n\nThe second <meta> element tells the browser to not automatically scale the size of our content. This is required for styling to look the same across several screen sizes such as a desktop computer and mobile phone (called responsive web design).\n\nThe first <link> element loads our CSS file (style.css) which we populated above.\n\nThe <script> element loads the (still empty) JavaScript file (script.js). In addition, the defer attribute tells the browser to only execute our JavaScript once all HTML has been created. Otherwise, the HTML tags that we look for in our JavaScript will not exist yet (since the <script> element is created before our HTML content, inside the <body> element).\n\nThe remaining <link> elements are specific code that we receive when selecting fonts to use from the Google Fonts website. These are copied and pasted from the Google Fonts website, and allow us to use the fonts in question.\n\nDatalist\u200b\n\ndatalist\n\nid\n\nexisting-tags\n\noption\n\nEngineering\n\n</\n\noption\n\noption\n\nHeadphones\n\n</\n\noption\n\noption\n\nWellness\n\n</\n\noption\n\noption\n\nOcean\n\n</\n\noption\n\noption\n\nOffice\n\n</\n\noption\n\noption\n\nCoding\n\n</\n\noption\n\noption\n\nDesk\n\n</\n\noption\n\noption\n\nBoxing\n\n</\n\noption\n\noption\n\nLab\n\n</\n\noption\n\n</\n\ndatalist\n\nHeader\u200b\n\nNext is the <header> element (note that this is different from <head>). The <header> element groups content (shown to the user) at the top of the page. Inside our <header> element we have the following:\n\nheader\n\nh1\n\nclass\n\ntitle\n\nMy Moodboard\n\n</\n\nh1\n\ndiv\n\nclass\n\ncontrols\n\nlabel\n\nclass\n\nfield\n\nfor\n\nfilter-input\n\nspan\n\nclass\n\nlabel\n\nFilter\n\n</\n\nspan\n\ninput\n\ntype\n\nsearch\n\nid\n\nfilter-input\n\nclass\n\ninput\n\nlist\n\nexisting-tags\n\nplaceholder\n\nNone\n\n/>\n\n</\n\nlabel\n\nbutton\n\nclass\n\nbutton\n\nid\n\ndialog-start\n\nAdd New Image\n\n</\n\nbutton\n\n</\n\ndiv\n\n</\n\nheader\n\nAn <h1> element that serves as the title of our page. The <h1> element will be used by search engines and accessibility devices to determine what page a user is currently on. Given that we only have one page, this can be the same as our <title> (defined in the above section).\n\nBy default, <div> elements do not have any inherent meaning and are often used to group and position content. The <div> element that we are using here is meant to wrap and style both the filter field and \"Add New Image\" button. The controls CSS class attribute is used to add styling that aligns the filter and button side by side.\n\nThe <label> element wraps the entire filter field and tells search engines and accessibility devices that the tags inside are grouped together. The field CSS class is used to style the field itself, whereas the for attribute points to the id attribute of the input element that is used by this <label> element.\n\nBy default <span> elements indicate a piece of short text used on our page. In our case, it adds a description in the top of the field. We are using the label CSS class attribute to add the styling required to overlay the <span> element on top of the <input> element.\n\nThe <input> element has a type attribute that is set to search. This tells the browser to make use of a special search input (this has several enhancements, such as a button to clear the current search phrase). Furthermore, we have the standard id attribute and class attributes. Lastly, we add the id value of our datalist (from the previous code snippet) to the list attribute (this links this input to our datalist). Finally, we add a placeholder attribute that tells the browser to display \"None\" when the input is empty.\n\nLastly, similar to the above, our button has a class attribute for CSS styling and an id attribute to be used by our JavaScript.", "start_char_idx": 8168, "end_char_idx": 12046, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11923779-b15c-4af6-bc11-32bcf6755695": {"__data__": {"id_": "11923779-b15c-4af6-bc11-32bcf6755695", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "c57b170bceb5f352f1f9c06c84a0f3c5c44453c4d8b5218b7c89cfa919e04f6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3cf83362-03c9-4863-aece-ee37e37b7c60", "node_type": "1", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "cd63c08a218ff0d02e361caacc0c7eabd52f3d55841ad722f3dd152f26d38b80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d972c65-ba00-443d-af5f-766a48d01349", "node_type": "1", "metadata": {}, "hash": "b8d81cef91497b07fd2fea1a2adbf710e25a5040d250945472640c718c597980", "class_name": "RelatedNodeInfo"}}, "hash": "0f062ca13644ae9f8bcfa7ca78e7f2de8b9d8d437f379384341449ed681f6962", "text": "In our case, it adds a description in the top of the field. We are using the label CSS class attribute to add the styling required to overlay the <span> element on top of the <input> element.\n\nThe <input> element has a type attribute that is set to search. This tells the browser to make use of a special search input (this has several enhancements, such as a button to clear the current search phrase). Furthermore, we have the standard id attribute and class attributes. Lastly, we add the id value of our datalist (from the previous code snippet) to the list attribute (this links this input to our datalist). Finally, we add a placeholder attribute that tells the browser to display \"None\" when the input is empty.\n\nLastly, similar to the above, our button has a class attribute for CSS styling and an id attribute to be used by our JavaScript.\n\nSections\u200b\n\nsection\n\nclass\n\npin\n\nimg\n\nclass\n\nimage\n\nsrc\n\nhttps://images.unsplash.com/photo-1580894908361-967195033215?w=600\n\n/>\n\nul\n\nclass\n\ninfo\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\noffice\n\n</\n\nbutton\n\n</\n\nli\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\ncoding\n\n</\n\nbutton\n\n</\n\nli\n\nli\n\nclass\n\ntag-wrap\n\nbutton\n\nclass\n\ntag\n\ndesk\n\n</\n\nbutton\n\n</\n\nli\n\n</\n\nul\n\nbutton\n\nclass\n\nremove\n\naria-label\n\nremove\n\nvalue\n\n159279541173033634211014623228\n\n&#10005;\n\n</\n\nbutton\n\n</\n\nsection\n\nThe wrapping <section> element indicates to search engines and accessibility devices that the content inside should be treated as a grouped, standalone piece of information.\n\nThe <img> element is used to show the pinned image (by supplying the URL). Note that the behaviour of this image is a bit different from regular <img> element behaviour. By means of the CSS styling applied to it, the relevant image will scale up or down until it covers the entire <section> element.\n\nThe <ul> element is used to indicate to search engines and accessibility devices that the content that follows is part of a list. When using an <ul> element, the order of the items doesn't matter, whereas if you use an <ol> element, it does.\n\nEach <li> inside the <ul> element indicates a separate item inside the list.\n\nInside each <li> is a <button> element that can be pressed to show all pins that have the same tag.\n\nThe last <button> element creates a way for users to remove an image from the pinboard. We are using the multiplication sign (\u00d7) as the text label of the button. It can be added to HTML by using the following special HTML entity code: &#10005;. While this visually appears similar to a crossed-out icon, usually associated with removing something, semantically it will be read differently by search engines and accessibility devices. It will be read as a multiplication sign, which as you can probably understand will create a lot of confusion. Therefore, we use the aria-label attribute to override the semantic value associated with the button to \"remove\". Lastly, you will see that the <button> element also has a value attribute with a unique number. The reason for this will be explained in part 2 of this project, so don't worry about it too much for now.\n\nDialog\u200b\n\nLastly, is a <dialog> element. While the <dialog> element is currently hidden from users with a hidden CSS class, it will be shown once the hidden class is removed. When it is visible, users can use it to add a new image to the board. The <dialog> element consists of the following:\n\ndialog\n\nid\n\ndialog\n\nclass\n\noverlay hidden\n\nform\n\nid\n\ndialog-form\n\nclass\n\nform\n\ndiv\n\nclass\n\ndialog-item\n\nlabel\n\nclass\n\nfield\n\nfor\n\ndialog-image\n\nspan\n\nclass\n\nlabel\n\nImage URL\n\n</\n\nspan\n\ninput\n\nclass\n\ninput\n\ntype\n\nurl\n\nid\n\ndialog-image\n\n/>\n\n</\n\nlabel\n\nem\n\nclass\n\nhelper\n\nFor example:\n\nhttps://images.unsplash.com/photo-1584464491033-06628f3a6b7b\n\n</\n\nem\n\n</\n\ndiv\n\ndiv\n\nclass\n\ndialog-item\n\nlabel\n\nclass\n\nfield\n\nfor\n\ndialog-tags\n\nspan\n\nclass\n\nlabel\n\nTags\n\n</\n\nspan\n\ninput\n\nclass\n\ninput\n\ntype\n\ntext\n\nid\n\ndialog-tags\n\n/>\n\n</\n\nlabel\n\nem\n\nclass\n\nhelper\n\nSeparate multiple tags with commas.", "start_char_idx": 11198, "end_char_idx": 15158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3d972c65-ba00-443d-af5f-766a48d01349": {"__data__": {"id_": "3d972c65-ba00-443d-af5f-766a48d01349", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "c57b170bceb5f352f1f9c06c84a0f3c5c44453c4d8b5218b7c89cfa919e04f6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11923779-b15c-4af6-bc11-32bcf6755695", "node_type": "1", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "0f062ca13644ae9f8bcfa7ca78e7f2de8b9d8d437f379384341449ed681f6962", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36cd78d2-38ee-4f66-81d5-79f0198edb32", "node_type": "1", "metadata": {}, "hash": "9d3515f1268e85d71e3e505ef1327bf6b8ea20cd33d98b4d89ed5582891d7e79", "class_name": "RelatedNodeInfo"}}, "hash": "b8d81cef91497b07fd2fea1a2adbf710e25a5040d250945472640c718c597980", "text": "The <dialog> element consists of the following:\n\ndialog\n\nid\n\ndialog\n\nclass\n\noverlay hidden\n\nform\n\nid\n\ndialog-form\n\nclass\n\nform\n\ndiv\n\nclass\n\ndialog-item\n\nlabel\n\nclass\n\nfield\n\nfor\n\ndialog-image\n\nspan\n\nclass\n\nlabel\n\nImage URL\n\n</\n\nspan\n\ninput\n\nclass\n\ninput\n\ntype\n\nurl\n\nid\n\ndialog-image\n\n/>\n\n</\n\nlabel\n\nem\n\nclass\n\nhelper\n\nFor example:\n\nhttps://images.unsplash.com/photo-1584464491033-06628f3a6b7b\n\n</\n\nem\n\n</\n\ndiv\n\ndiv\n\nclass\n\ndialog-item\n\nlabel\n\nclass\n\nfield\n\nfor\n\ndialog-tags\n\nspan\n\nclass\n\nlabel\n\nTags\n\n</\n\nspan\n\ninput\n\nclass\n\ninput\n\ntype\n\ntext\n\nid\n\ndialog-tags\n\n/>\n\n</\n\nlabel\n\nem\n\nclass\n\nhelper\n\nSeparate multiple tags with commas. For example: engineering,\n\ncoding\n\n</\n\nem\n\n</\n\ndiv\n\ndiv\n\nclass\n\ndialog-item\n\nbutton\n\ntype\n\nsubmit\n\nclass\n\nbutton\n\nid\n\ndialog-submit\n\ndisabled\n\nSave Image\n\n</\n\nbutton\n\n</\n\ndiv\n\n</\n\nform\n\n</\n\ndialog\n\nThe wrapping <dialog> element forms the transparent black overlay that sits behind the <form> element. It has both an overlay CSS class (for this behaviour) and a dynamic hidden CSS class that can be toggled on and off in order to show or hide the dialog (and nested elements).\n\nThe <form> element indicates to search engines and accessibility devices that the next section functions as a traditional web form that should be submitted by clicking a button (as opposed to our filtering which happens in real time as you type). Note that a <form> element can also be submitted with the \"Enter\" key once the required data has been provided.\n\nWithin the <form> element are three repeating <div> elements. As mentioned before, these have no semantic meaning, but can be used to group and position elements. In this case, we are using the <div> elements to add some spacing between the different elements in the form (by means of the dialog-item CSS class).\n\nInside the first two <div> tags, we are reusing the first input field HTML structure we created (from the above <header> snippet), albeit with different id and type attributes on each <input> element.\n\nWe are also adding <em> elements after each. The <em> element is short for \"emphasis\" and is similar in function to <span>; however, it indicates that the piece of text has specific importance. In our snippet above, we use this element for helper text to provide users with context regarding what is expected in the fields.\n\nWhen unhidden, the dialog will look as follows:\n\nStyling\u200b\n\nNow that we've covered the basic HTML structure, let's dive into our CSS (style.css). We won't cover each part of this in detail, but you can use the phenomenal CSS-Tricks maintained Almanac to understand exactly what specific properties do. Let's take a look at some broader aspects of CSS that we have used in this file.\n\nUniversal selector\u200b\n\nuniversal CSS selector. It applies the designated styling rules to every single HTML element on the page. In our case, we want to override the way that size is calculated on our page. By default, all elements have a\n\nInternational Box-sizing Awareness Day by the front-end community.\n\nBy default, content-box adds all borders and padding on top of the designated size of an element. For example, if we have an element that has a width: 10rem with padding: 1rem and border: 1px, the actual size of the element will be the total value of 10rem + 1rem + 1px.\n\nbox-sizing\n\nborder-box\n\nBy default, content-box adds all borders and padding on top of the designated size of an element. For example, if we have an element that has a width: 10rem with padding: 1rem and border: 1px, the actual size of the element will be the total value of 10rem + 1rem + 1px.\n\nBy using border-box, all of these are included as part of an element's designated width. For example, instead of the total width being 10rem + 1rem + 1px, it will be the specified 10rem with the space needed for padding and borders being factored into this amount.\n\nScrolling\u200b\n\nYou will notice that we set a couple of rules in order to override the default (often different) values of the <body> element in different browsers.", "start_char_idx": 14528, "end_char_idx": 18520, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36cd78d2-38ee-4f66-81d5-79f0198edb32": {"__data__": {"id_": "36cd78d2-38ee-4f66-81d5-79f0198edb32", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "c57b170bceb5f352f1f9c06c84a0f3c5c44453c4d8b5218b7c89cfa919e04f6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d972c65-ba00-443d-af5f-766a48d01349", "node_type": "1", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "b8d81cef91497b07fd2fea1a2adbf710e25a5040d250945472640c718c597980", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ee19ea8-bb23-49f4-b816-5265679832a7", "node_type": "1", "metadata": {}, "hash": "7d1f39027a435071ebaa3851313638e9e49cea4823b6be3cd42cd3d07a2251dc", "class_name": "RelatedNodeInfo"}}, "hash": "9d3515f1268e85d71e3e505ef1327bf6b8ea20cd33d98b4d89ed5582891d7e79", "text": "box-sizing\n\nborder-box\n\nBy default, content-box adds all borders and padding on top of the designated size of an element. For example, if we have an element that has a width: 10rem with padding: 1rem and border: 1px, the actual size of the element will be the total value of 10rem + 1rem + 1px.\n\nBy using border-box, all of these are included as part of an element's designated width. For example, instead of the total width being 10rem + 1rem + 1px, it will be the specified 10rem with the space needed for padding and borders being factored into this amount.\n\nScrolling\u200b\n\nYou will notice that we set a couple of rules in order to override the default (often different) values of the <body> element in different browsers.\n\nbody\n\npadding\n\nmargin\n\nbackground-color\n\n#f4b0b0\n\nfont-family\n\n\"Helvetica neue\"\n\nHelvetica\n\nArial\n\nsans-serif\n\noverflow-y\n\nscroll\n\noverflow-x\n\nhidden\n\nSpecifically, you'll see that we set overflow-x: hidden and overflow-y: scroll. This is done to prevent users from accidentally scrolling horizontally, and it also forces a vertical scroll bar (even if the content does not exceed the height of your window). The latter is to ensure that the content doesn't jump around when a vertical scroll bar automatically gets added (or removed).\n\nPositioning\u200b\n\nregular content flow and instead resort to being manually placed by the CSS (by means of\n\nChris Coyier's super useful\n\nA Complete Guide to Flexbox.\n\n.field\n\ndisplay\n\nflex\n\njustify-content\n\ncenter\n\nalign-items\n\ncenter\n\nfont-size\n\n1.5\n\nrem\n\nfont-weight\n\nbold\n\nletter-spacing\n\n0.5\n\npx\n\nposition\n\nrelative\n\ncursor\n\npointer\n\nmax-width\n\n40\n\nrem\n\n.label\n\nposition\n\nabsolute\n\nfont-size\n\n0.75\n\nrem\n\nleft\n\nrem\n\ntop\n\nrem\n\nopacity\n\n0.5\n\ntext-transform\n\nuppercase\n\nfont-weight\n\nbold\n\nPseudo-classes\u200b\n\npseudo-classes associated. The base class defines the styling of our button class in its resting state, whereas the\n\n.button\n\nborder-radius\n\npx\n\npadding\n\nrem\n\nfont-size\n\nrem\n\nfont-family\n\n\"Montserrat\"\n\nsans-serif\n\nfont-weight\n\nbold\n\nwhite-space\n\nnowrap\n\ncursor\n\npointer\n\n.button\n\n:disabled\n\ncursor\n\nnot-allowed\n\n.button\n\n:not\n\n:disabled\n\n:hover\n\nbackground\n\n#ccc\n\nMedia queries\u200b\n\nWe use several media queries on our pin CSS class. If you are not familiar with media queries, they essentially allow us to set the styling rules to be applied to different browser sizes. Media queries are the heart of the modern-day responsive web design methodology.\n\nIn the snippet below, if a user's browser screen is wider than 40rem, then two pins should be shown on a row (each pin should take up 50% of available space). However, if the browser width is wider -- 65rem -- then we should show three pins on a row, and so forth. Try resizing your browser window when viewing the pinboard to see this in action.\n\n.pin\n\nposition\n\nrelative\n\npadding\n\nrem\n\nwidth\n\n100\n\n@media\n\nmin-width\n\n40\n\nrem\n\n.pin\n\nwidth\n\n50\n\n@media\n\nmin-width\n\n65\n\nrem\n\n.pin\n\nwidth\n\n33.333333333333\n\n@media\n\nmin-width\n\n100\n\nrem\n\n.pin\n\nwidth\n\n25\n\nWe use the cascading nature of CSS here to override each width if the browser is wider than the previous value. This approach, named mobile first, was pioneered by Luke Wroblewski in a book with the same title. The reasoning is that it is easier to scale a design up than it is to scale it down; therefore, we start by assuming the smallest browser size and then incrementally working our way upwards.\n\nThis is also closely related to the computer science principle of progressive enhancement.\n\nTransition\u200b\n\nNote that a blank space in our CSS selectors does not imply a direct parent-child relation. It indicates that classes can be nested at any level within the parent element. In order to use a direct parent-child relation, you need to use a greater-than sign (>). For example with .pin > .info, the info class needs to be nested only a single level below the parent.", "start_char_idx": 17798, "end_char_idx": 21631, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ee19ea8-bb23-49f4-b816-5265679832a7": {"__data__": {"id_": "9ee19ea8-bb23-49f4-b816-5265679832a7", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "c57b170bceb5f352f1f9c06c84a0f3c5c44453c4d8b5218b7c89cfa919e04f6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36cd78d2-38ee-4f66-81d5-79f0198edb32", "node_type": "1", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}, "hash": "9d3515f1268e85d71e3e505ef1327bf6b8ea20cd33d98b4d89ed5582891d7e79", "class_name": "RelatedNodeInfo"}}, "hash": "7d1f39027a435071ebaa3851313638e9e49cea4823b6be3cd42cd3d07a2251dc", "text": "This approach, named mobile first, was pioneered by Luke Wroblewski in a book with the same title. The reasoning is that it is easier to scale a design up than it is to scale it down; therefore, we start by assuming the smallest browser size and then incrementally working our way upwards.\n\nThis is also closely related to the computer science principle of progressive enhancement.\n\nTransition\u200b\n\nNote that a blank space in our CSS selectors does not imply a direct parent-child relation. It indicates that classes can be nested at any level within the parent element. In order to use a direct parent-child relation, you need to use a greater-than sign (>). For example with .pin > .info, the info class needs to be nested only a single level below the parent.\n\n.info\n\nposition\n\nabsolute\n\nbottom\n\nleft\n\nwidth\n\n100\n\nopacity\n\ntransition\n\nopacity\n\n0.3\n\ntransform\n\n0.3\n\nlist-style\n\nnone\n\npadding\n\ndisplay\n\nflex\n\njustify-content\n\ncenter\n\nflex-wrap\n\nwrap\n\ntransform\n\ntranslateY\n\nrem\n\n.pin\n\n:hover\n\n.info\n\nopacity\n\ntransform\n\ntranslateY\n\n1\n\nrem\n\n.remove\n\nposition\n\nabsolute\n\nright\n\nrem\n\ntop\n\nrem\n\nborder-radius\n\n50\n\ndisplay\n\nflex\n\nalign-items\n\ncenter\n\njustify-content\n\ncenter\n\nheight\n\n2.5\n\nrem\n\nwidth\n\n2.5\n\nrem\n\nfont-size\n\n1.5\n\nrem\n\nfont-weight\n\nbold\n\nfont-family\n\n\"Montserrat\"\n\nsans-serif\n\ncursor\n\npointer\n\nopacity\n\ntransition\n\nopacity\n\n0.3\n\ntransform\n\n0.3\n\ntransform\n\ntranslateY\n\n1\n\nrem\n\n.pin\n\n:hover\n\n.remove\n\ntransform\n\ntranslateY\n\nopacity\n\n.remove\n\n:hover\n\nbackground\n\n#ccc\n\nOur hover effect will display the info and remove classes over our image, as follows:\n\nObject-fit\u200b\n\nOur <img> elements' behaviour needs to be a bit different from the default <img> element behaviour. We accomplish this as follows:\n\nThe width: 100% and height: 20rem values tell the image to fill its entire parent width (the pin itself), but to force a height of 20rem.\n\nBy default, the above will cause the image to stretch and distort (since it will be forced to that size without cropping).\n\nHowever, object-fit: cover tells the image to scale up or down (keeping its original aspect ratio) while cropping the overflowing parts of the image as needed until the entire <img> space is filled.\n\n.image\n\nwidth\n\n100\n\nheight\n\n20\n\nrem\n\nobject-fit\n\ncover\n\nbox-shadow\n\npx\n\npx\n\nrgba\n\n0.2\n\nborder-radius\n\npx\n\nbackground-color\n\n#d18c8c\n\nIf we leave out the object-fit property, then our images will get stretched as follows:\n\nFixed overlay\u200b\n\n.overlay\n\nposition\n\nfixed\n\nbackground\n\nrgba\n\n0.7\n\ntop\n\nleft\n\nheight\n\n100\n\nwidth\n\n100\n\ndisplay\n\nflex\n\nalign-items\n\ncenter\n\njustify-content\n\ncenter\n\nbox-shadow\n\npx\n\n11\n\npx\n\n15\n\npx\n\n7\n\npx\n\nrgba\n\n0.2\n\npx\n\n24\n\npx\n\n38\n\npx\n\npx\n\nrgba\n\n0.14\n\npx\n\npx\n\n46\n\npx\n\npx\n\nrgba\n\n0.12\n\nNext steps\u200b\n\nWhile the above creates all of the structural parts needed for our pinboard, it is completely static. This means that nothing happens when users press buttons or enter text into inputs. In part 2 of our project, we'll use JavaScript to make our project functional and interactive.\n\n< Previous: Make Snake with vanilla JavaScript\n\nNext: Pinboard project Part 2: JavaScript >\n\nWas this helpful?\n\nLast updated on Aug 31, 2023\n\nCreating Your Own Project on Replit\n\nBasic Structure and Styling\n\nMarkupHeadDatalistHeaderSectionsDialog\n\nStylingUniversal selectorScrollingPositioningPseudo-classesMedia queriesTransitionObject-fitFixed overlay\n\nNext steps", "start_char_idx": 20872, "end_char_idx": 24202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"82c718c3-7962-44c0-9ce3-2940d0f0aec8": {"node_ids": ["a51c74cb-d92d-4f9e-9754-4eb38dbce96e", "fd927b73-f346-47f9-a4b3-bc027fc5949b", "8e7fa5fc-e724-47de-8ca3-a8309a3ddc87", "3cf83362-03c9-4863-aece-ee37e37b7c60", "11923779-b15c-4af6-bc11-32bcf6755695", "3d972c65-ba00-443d-af5f-766a48d01349", "36cd78d2-38ee-4f66-81d5-79f0198edb32", "9ee19ea8-bb23-49f4-b816-5265679832a7"], "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/tutorials/html-css-js/pinboard-project-part-1.html"}}}, "docstore/metadata": {"a51c74cb-d92d-4f9e-9754-4eb38dbce96e": {"doc_hash": "2f846ce479f4a0750b7f585badc6f1c1a25653310019c1e372abc0e8184025aa", "ref_doc_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8"}, "fd927b73-f346-47f9-a4b3-bc027fc5949b": {"doc_hash": "a9161ad5ec58546e04621d7dd21ef1615d0503dcfdb3f063a62abcd838176122", "ref_doc_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8"}, "8e7fa5fc-e724-47de-8ca3-a8309a3ddc87": {"doc_hash": "5334768a94dd018ab25545c6671b104b176e3622a188f65911e233c249ae6dfc", "ref_doc_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8"}, "3cf83362-03c9-4863-aece-ee37e37b7c60": {"doc_hash": "cd63c08a218ff0d02e361caacc0c7eabd52f3d55841ad722f3dd152f26d38b80", "ref_doc_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8"}, "11923779-b15c-4af6-bc11-32bcf6755695": {"doc_hash": "0f062ca13644ae9f8bcfa7ca78e7f2de8b9d8d437f379384341449ed681f6962", "ref_doc_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8"}, "3d972c65-ba00-443d-af5f-766a48d01349": {"doc_hash": "b8d81cef91497b07fd2fea1a2adbf710e25a5040d250945472640c718c597980", "ref_doc_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8"}, "36cd78d2-38ee-4f66-81d5-79f0198edb32": {"doc_hash": "9d3515f1268e85d71e3e505ef1327bf6b8ea20cd33d98b4d89ed5582891d7e79", "ref_doc_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8"}, "9ee19ea8-bb23-49f4-b816-5265679832a7": {"doc_hash": "7d1f39027a435071ebaa3851313638e9e49cea4823b6be3cd42cd3d07a2251dc", "ref_doc_id": "82c718c3-7962-44c0-9ce3-2940d0f0aec8"}}}