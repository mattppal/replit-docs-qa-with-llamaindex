{"docstore/data": {"ddd2bce1-e0a7-4b7e-894e-1869de36a497": {"__data__": {"id_": "ddd2bce1-e0a7-4b7e-894e-1869de36a497", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/examples/snippet-manager.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9fe48a8-973d-41b2-856c-0ac8241b419a", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/examples/snippet-manager.html"}, "hash": "efe8602b91303975b85c0bcd4f58b9e9b771f540031b4d2d377a2f41784e4daa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fe011ce-fa2e-46fb-a340-a2623cd4bd91", "node_type": "1", "metadata": {}, "hash": "70f0581cb05728e8f208c2c06f61a848840cd8490bf64e6e860c066f24c2a02c", "class_name": "RelatedNodeInfo"}}, "hash": "8e7bcff22b0e840177b3dffd00f25efd14477a6ba80822f56f037c18dc5527b2", "text": "status\n\nerror\n\nuseReplit\n\n...\n\nHandle Handshake Statuses\u200b\n\nHandle the loading and error statuses from the useReplit hook. If the Extension is neither loading nor has resulted in an error, the main content will be rendered.\n\nfunction\n\nApp\n\n...\n\nif\n\nstatus\n\n===\n\n'error'\n\nreturn\n\ndiv\n\nclassName\n\nscreen\n\nh2\n\nError:\n\nerror\n\nmessage\n\n</\n\nh2\n\n</\n\ndiv\n\nif\n\nstatus\n\n===\n\n'loading'\n\nreturn\n\ndiv\n\nclassName\n\nscreen\n\nh2\n\nLoading...\n\n</\n\nh2\n\n</\n\ndiv\n\nreturn\n\nmain\n\nh1\n\nSnippet Manager\n\n</\n\nh1\n\n</\n\nmain\n\nPaste the following CSS code into src/App.css to apply basic styling to your exstension. If you refresh the extension, the snippets you've added will be saved.\n\nbody\n\nbackground-color\n\nrgb\n\n40\n\n40\n\n40\n\ncolor\n\nwhite\n\nmargin\n\nfont-family\n\nsans-serif\n\nmain\n\npadding\n\n16\n\npx\n\ndisplay\n\nflex\n\nflex-direction\n\ncolumn\n\nmain h1\n\nmargin-top\n\nmargin-bottom\n\n16\n\npx\n\n.screen\n\nheight\n\n100\n\nvh\n\ndisplay\n\nflex\n\njustify-content\n\ncenter\n\nalign-items\n\ncenter\n\nSnippet Creation\u200b\n\nCreate an empty function insertSnippet within the App function.\n\nconst\n\ninsertSnippet\n\n=>\n\nAdd the following JSX code into the App function after the h1 tag. This will be a basic form to create a new snippet.\n\ndiv\n\nclassName\n\ncreate-snippet-form\n\ntextarea\n\nplaceholder\n\nEnter a new snippet here...\n\nvalue\n\nnewSnippetValue\n\nonChange\n\n=>\n\nsetNewSnippetValue\n\ntarget\n\nvalue\n\n</\n\ntextarea\n\ndiv\n\nbutton\n\nonClick\n\ninsertSnippet\n\nAdd Snippet\n\n</\n\nbutton\n\n</\n\ndiv\n\n</\n\ndiv\n\nDefine an asynchronous function updateSnippets in App. This will allow us to update the snippets state variable and save it using the replDb module at the same time.\n\nNote: Values saved to a Repl's database get automatically URI-decoded so encoding has to happen twice. Repl Databases can only store key-values as strings. Read More.\n\nconst\n\nupdateSnippets\n\nasync\n\nsnippetsArr\n\n=>\n\nsetSnippets\n\nsnippetsArr\n\nawait\n\nreplDb\n\nset\n\nkey\n\n\"snippets\"\n\nvalue\n\nencodeURIComponent\n\nsnippetsArr\n\nmap\n\nencodeURIComponent\n\njoin\n\n\",\"\n\nBack in the insertSnippet function, use the updateSnippets function to insert and save newSnippetValue to the list of snippets.\n\nconst\n\ninsertSnippet\n\n=>\n\nupdateSnippets\n\n...\n\nsnippets\n\nnewSnippetValue\n\nsetNewSnippetValue\n\n\"\"\n\nAdd the following CSS code into src/App.css to style the snippet creation form:\n\n.create-snippet-form\n\ndisplay\n\nflex\n\n.create-snippet-form\n\ntextarea\n\nflex-grow\n\nmargin-right\n\npx\n\ntextarea\n\nbutton\n\npadding\n\npx\n\nbackground-color\n\nrgb\n\n90\n\n90\n\n90\n\nborder-radius\n\npx\n\nborder\n\nnone\n\ncolor\n\nwhite\n\noutline\n\nnone\n\ntextarea\n\n:focus\n\ntextarea\n\n:hover\n\nborder\n\nnone\n\noutline\n\nnone\n\nbox-shadow\n\npx\n\n#3273dc\n\ntextarea\n\n::placeholder\n\ncolor\n\nrgb\n\n200\n\n200\n\n200\n\nbutton\n\ncursor\n\npointer\n\nbutton\n\n:focus\n\nbutton\n\n:hover\n\noutline\n\nnone\n\nbackground-color\n\n#3273dc\n\nLoad and list the snippets\u200b\n\nDefine an asynchronous function loadSnippets in App. This function will fetch all the snippets from the Replit database and update the snippets state variable.\n\nconst\n\nloadSnippets\n\nasync\n\n=>\n\nconst\n\nsnippetsFromDB\n\nawait\n\nreplDb\n\nget\n\nkey\n\n\"snippets\"\n\nif\n\nsnippetsFromDB\n\nsetSnippets\n\nsnippetsFromDB\n\nsplit\n\n\",\"\n\nmap\n\ndecodeURIComponent\n\nCall the useReplitEffect hook to run the loadSnippets function once, when Replit successfully connects to your Extension.\n\nuseReplitEffect\n\n=>\n\nloadSnippets\n\nAdd the following code to the main UI after the .create-snippet-form element. Display each snippet as a paragraph from the snippet state variable.\n\ndiv\n\nclassName\n\nsnippet-list\n\nsnippets\n\nmap\n\nsnippet\n\nindex\n\n=>\n\nkey\n\nindex\n\nsnippet\n\n</\n\n</\n\ndiv\n\nInstall your extension, start creating some snippets, watch as they appear in realtime.\n\nThe Snippet Component\u200b\n\nYou will be able to copy, edit, and delete snippets from the Snippet component with the click of a button.\n\nCreate a file src/components/Snippet.jsx and import the following dependencies:\n\nimport\n\nmessages\n\nfrom\n\n\"@replit/extensions\"\n\nimport\n\nCopy\n\nEdit2\n\nTrash\n\nfrom\n\n\"react-feather\"\n\nimport\n\nuseState\n\nuseEffect\n\nfrom\n\n\"react\"\n\nCreate and export the Snippet component.", "start_char_idx": 0, "end_char_idx": 3972, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8fe011ce-fa2e-46fb-a340-a2623cd4bd91": {"__data__": {"id_": "8fe011ce-fa2e-46fb-a340-a2623cd4bd91", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/examples/snippet-manager.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9fe48a8-973d-41b2-856c-0ac8241b419a", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/examples/snippet-manager.html"}, "hash": "efe8602b91303975b85c0bcd4f58b9e9b771f540031b4d2d377a2f41784e4daa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ddd2bce1-e0a7-4b7e-894e-1869de36a497", "node_type": "1", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/examples/snippet-manager.html"}, "hash": "8e7bcff22b0e840177b3dffd00f25efd14477a6ba80822f56f037c18dc5527b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6cf4034-4a13-42df-aabd-3d52f3ca8d8c", "node_type": "1", "metadata": {}, "hash": "f476ba0c32541bfe2068077f712718a063ce7205c787c06b122e318d1433e48d", "class_name": "RelatedNodeInfo"}}, "hash": "70f0581cb05728e8f208c2c06f61a848840cd8490bf64e6e860c066f24c2a02c", "text": "useReplitEffect\n\n=>\n\nloadSnippets\n\nAdd the following code to the main UI after the .create-snippet-form element. Display each snippet as a paragraph from the snippet state variable.\n\ndiv\n\nclassName\n\nsnippet-list\n\nsnippets\n\nmap\n\nsnippet\n\nindex\n\n=>\n\nkey\n\nindex\n\nsnippet\n\n</\n\n</\n\ndiv\n\nInstall your extension, start creating some snippets, watch as they appear in realtime.\n\nThe Snippet Component\u200b\n\nYou will be able to copy, edit, and delete snippets from the Snippet component with the click of a button.\n\nCreate a file src/components/Snippet.jsx and import the following dependencies:\n\nimport\n\nmessages\n\nfrom\n\n\"@replit/extensions\"\n\nimport\n\nCopy\n\nEdit2\n\nTrash\n\nfrom\n\n\"react-feather\"\n\nimport\n\nuseState\n\nuseEffect\n\nfrom\n\n\"react\"\n\nCreate and export the Snippet component. The props declared in this component are as follows:\n\ncontent is the value of the snippet\n\nindex is a number signifying the index of the snippet\n\nsnippets is a full list of all the snippets in the database\n\nupdateSnippets is the asynchronous function passed down from the App component\n\nAdd two state variables isEditing and value. isEditing indicates whether the snippet is being edited and value is the new value which will be used when editing the snippet, before it is saved.\n\nexport\n\nconst\n\nSnippet\n\ncontent\n\nindex\n\nsnippets\n\nupdateSnippets\n\n=>\n\nconst\n\nisEditing\n\nsetIsEditing\n\nuseState\n\nfalse\n\nconst\n\nvalue\n\nsetValue\n\nuseState\n\ncontent\n\nreturn\n\ndiv\n\nSnippet Component\n\n</\n\ndiv\n\nAdd a useEffect hook to set value to content whenever content updates. The prop will change when snippets get edited and deleted.\n\nuseEffect\n\n=>\n\nsetValue\n\ncontent\n\ncontent\n\nCreate a function copyToClipboard. Handle the asynchronous clipboard event with the .then() and .catch() methods. Use the messages module to display whether the action was successful or not.\n\nconst\n\ncopyToClipboard\n\n=>\n\nwindow\n\nnavigator\n\nclipboard\n\nwriteText\n\ncontent\n\nthen\n\nasync\n\n=>\n\nawait\n\nmessages\n\nshowConfirm\n\n\"Copied to clipboard\"\n\ncatch\n\nasync\n\n=>\n\nawait\n\nmessages\n\nshowError\n\nmessage\n\nDefine a function saveEdit. This will update the current snippet to reflect the value state variable and save it to the database.\n\nconst\n\nsaveEdit\n\nasync\n\n=>\n\nconst\n\nsnippetsArr\n\n...\n\nsnippets\n\nsnippetsArr\n\nindex\n\nvalue\n\nawait\n\nupdateSnippets\n\nsnippetsArr\n\nsetIsEditing\n\nfalse\n\nAdd a function deleteSnippet. After it is confirmed that the user wants to delete the snippet, remove the snippet from both the application state and the database.\n\nconst\n\ndeleteSnippet\n\nasync\n\n=>\n\nconst\n\nshouldDelete\n\nconfirm\n\n\"Are you sure you want to delete this snippet?\"\n\nif\n\nshouldDelete\n\nconst\n\nsnippetsArr\n\n...\n\nsnippets\n\nsnippetsArr\n\nsplice\n\nindex\n\nawait\n\nupdateSnippets\n\nsnippetsArr\n\nawait\n\nmessages\n\nshowConfirm\n\n\"Snippet Deleted\"\n\nComplete the UI of the Snippet component with the following JSX code. If the snippet is being edited, a different component will be shown.\n\nreturn\n\nisEditing\n\ndiv\n\nclassName\n\nsnippet edit\n\ntextarea\n\nvalue\n\nvalue\n\nonChange\n\n=>\n\nsetValue\n\ntarget\n\nvalue\n\n/>\n\ndiv\n\nclassName\n\nsnippet-button-row\n\nbutton\n\nonClick\n\n=>\n\nsetIsEditing\n\nfalse\n\nCancel\n\n</\n\nbutton\n\nbutton\n\nonClick\n\nsaveEdit\n\nSave\n\n</\n\nbutton\n\n</\n\ndiv\n\n</\n\ndiv\n\ndiv\n\nclassName\n\nsnippet\n\ncontent\n\n</\n\ndiv\n\nclassName\n\nsnippet-buttons\n\nbutton\n\nonClick\n\ncopyToClipboard\n\nCopy\n\n/>\n\n</\n\nbutton\n\nbutton\n\nonClick\n\n=>\n\nsetIsEditing\n\ntrue\n\nEdit2\n\n/>\n\n</\n\nbutton\n\nbutton\n\nonClick\n\ndeleteSnippet\n\nTrash\n\n/>\n\n</\n\nbutton\n\n</\n\ndiv\n\n</\n\ndiv\n\nApply the following CSS to src/App.css:\n\n.snippet\n\npadding\n\npx\n\nbackground\n\nrgb\n\n70\n\n70\n\n70\n\nmargin-bottom\n\npx\n\ndisplay\n\nflex\n\npadding\n\npx\n\nborder-radius\n\npx\n\n.snippet\n\nflex-grow\n\nmargin\n\npadding\n\n.snippet-buttons\n\ndisplay\n\nflex\n\n.snippet-buttons\n\nbutton\n\nmargin-left\n\npx\n\n.edit\n\nflex-direction\n\ncolumn\n\n.edit\n\ntextarea\n\nmargin-bottom\n\npx\n\n.edit\n\n.snippet-button-row\n\nbutton\n\nmargin-right\n\npx\n\nDisplay the snippets\u200b\n\nIn App.jsx, import the Snippet component.\n\nimport\n\nSnippet\n\nfrom\n\n\"./components/Snippet\"\n\nUpdate the .snippet-list div to render the new component.", "start_char_idx": 3207, "end_char_idx": 7192, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6cf4034-4a13-42df-aabd-3d52f3ca8d8c": {"__data__": {"id_": "e6cf4034-4a13-42df-aabd-3d52f3ca8d8c", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/examples/snippet-manager.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9fe48a8-973d-41b2-856c-0ac8241b419a", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/examples/snippet-manager.html"}, "hash": "efe8602b91303975b85c0bcd4f58b9e9b771f540031b4d2d377a2f41784e4daa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fe011ce-fa2e-46fb-a340-a2623cd4bd91", "node_type": "1", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/examples/snippet-manager.html"}, "hash": "70f0581cb05728e8f208c2c06f61a848840cd8490bf64e6e860c066f24c2a02c", "class_name": "RelatedNodeInfo"}}, "hash": "f476ba0c32541bfe2068077f712718a063ce7205c787c06b122e318d1433e48d", "text": "import\n\nSnippet\n\nfrom\n\n\"./components/Snippet\"\n\nUpdate the .snippet-list div to render the new component.\n\nsnippets\n\nmap\n\nsnippet\n\nindex\n\n=>\n\nSnippet\n\nkey\n\nindex\n\ncontent\n\nsnippet\n\nsnippets\n\nsnippets\n\nupdateSnippets\n\nupdateSnippets\n\nindex\n\nindex\n\nFinally, style the snippet list with the following CSS:\n\n.snippet-list\n\nflex-direction\n\ncolumn\n\ndisplay\n\nflex\n\nmargin-top\n\npx\n\nThe Snippet Manager extension is now complete! Install it, open the Tools section on the sidebar, and select the Snippet Manager extension. You can now easily save and access your favorite snippets directly within your Repl.\n\nSee full solution\n\n< Previous: JSON Editor\n\nNext: Javascript Commands >\n\nWas this helpful?\n\nLast updated on Aug 31, 2023\n\nPrequisites\n\nSet up your Repl\n\nConfigure the manifest file\n\nBuild the Snippet ManagerInitialize the HandshakeHandle Handshake StatusesSnippet CreationLoad and list the snippetsThe Snippet ComponentDisplay the snippets", "start_char_idx": 7088, "end_char_idx": 8026, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"c9fe48a8-973d-41b2-856c-0ac8241b419a": {"node_ids": ["ddd2bce1-e0a7-4b7e-894e-1869de36a497", "8fe011ce-fa2e-46fb-a340-a2623cd4bd91", "e6cf4034-4a13-42df-aabd-3d52f3ca8d8c"], "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/examples/snippet-manager.html"}}}, "docstore/metadata": {"ddd2bce1-e0a7-4b7e-894e-1869de36a497": {"doc_hash": "8e7bcff22b0e840177b3dffd00f25efd14477a6ba80822f56f037c18dc5527b2", "ref_doc_id": "c9fe48a8-973d-41b2-856c-0ac8241b419a"}, "8fe011ce-fa2e-46fb-a340-a2623cd4bd91": {"doc_hash": "70f0581cb05728e8f208c2c06f61a848840cd8490bf64e6e860c066f24c2a02c", "ref_doc_id": "c9fe48a8-973d-41b2-856c-0ac8241b419a"}, "e6cf4034-4a13-42df-aabd-3d52f3ca8d8c": {"doc_hash": "f476ba0c32541bfe2068077f712718a063ce7205c787c06b122e318d1433e48d", "ref_doc_id": "c9fe48a8-973d-41b2-856c-0ac8241b419a"}}}