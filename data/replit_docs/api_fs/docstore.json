{"docstore/data": {"649540b6-de72-4178-a7bf-e0cfd107733e": {"__data__": {"id_": "649540b6-de72-4178-a7bf-e0cfd107733e", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/api/fs.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d0bbf8e0-77bd-43e9-8e04-d8ff7a090d97", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/api/fs.html"}, "hash": "78d54201c7f5bee306f6f22bd8925e92cd88340a81419d0b0d0e2ede3fe14500", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1d9a0f5-c82f-4198-8c24-6aa36981ca9a", "node_type": "1", "metadata": {}, "hash": "9cc2c1fd12ed84b8c24a2e2aab100f64a85d33262a16f706a3a55f7aac8e457e", "class_name": "RelatedNodeInfo"}}, "hash": "126073c00071798db562fe13a1d7a7543234f36bbecdcb2cf0dc78ee095930ed", "text": "Promise\n\nerror\n\nstring\n\nfs.move\u200b\n\nMoves the file or directory at from to to. Required permissions: read, write-exec.\n\nmove\n\npath\n\nstring\n\nto\n\nstring\n\nPromise\n\nerror\n\nnull\n\nstring\n\nsuccess\n\nboolean\n\nfs.copyFile\u200b\n\nCopies the file at from to to. Required permissions: read, write-exec.\n\ncopyFile\n\npath\n\nstring\n\nto\n\nstring\n\nPromise\n\nerror\n\nnull\n\nstring\n\nsuccess\n\nboolean\n\nfs.watchFile\u200b\n\nWatches the file at path for changes with the provided listeners. Returns a dispose method which cleans up the listeners. Required permissions: read.\n\nwatchFile\n\npath\n\nstring\n\nlisteners\n\nWatchFileListeners\n\nstring\n\nencoding\n\n\"utf8\"\n\n\"binary\"\n\nPromise\n\nDisposerFunction\n\nfs.watchDir\u200b\n\nWatches file events (move, create, delete) in the specified directory at the given path. Returns a dispose method which cleans up the listeners. Required permissions: read.\n\nwatchDir\n\npath\n\nstring\n\nlisteners\n\nWatchDirListeners\n\nPromise\n\nDisposerFunction\n\nfs.watchTextFile\u200b\n\nWatches a text file at path for changes with the provided listeners. Returns a dispose method which cleans up the listeners.\n\nUse this for watching text files, and receive changes as versioned operational transform (OT) operations annotated with their source.\n\nRequired permissions: read.\n\nwatchTextFile\n\npath\n\nstring\n\nlisteners\n\nWatchTextFileListeners\n\nFunction\n\nTypes\u200b\n\nChangeEventType\u200b\n\nA file change event type\n\n\n\nDeleteEvent\u200b\n\nFired when a file is deleted\n\neventType Delete node FsNode\n\nDirectoryChildNode\u200b\n\nA directory child node - a file or a folder.\n\nfilename string type FsNodeType\n\nFsNode\u200b\n\nA base interface for nodes, just includes\nthe type of the node and the path, This interface\ndoes not expose the node's content/children\n\npath string type FsNodeType\n\nFsNodeType\u200b\n\nA Filesystem node type", "start_char_idx": 0, "end_char_idx": 1743, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b1d9a0f5-c82f-4198-8c24-6aa36981ca9a": {"__data__": {"id_": "b1d9a0f5-c82f-4198-8c24-6aa36981ca9a", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/api/fs.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d0bbf8e0-77bd-43e9-8e04-d8ff7a090d97", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/api/fs.html"}, "hash": "78d54201c7f5bee306f6f22bd8925e92cd88340a81419d0b0d0e2ede3fe14500", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "649540b6-de72-4178-a7bf-e0cfd107733e", "node_type": "1", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/api/fs.html"}, "hash": "126073c00071798db562fe13a1d7a7543234f36bbecdcb2cf0dc78ee095930ed", "class_name": "RelatedNodeInfo"}}, "hash": "9cc2c1fd12ed84b8c24a2e2aab100f64a85d33262a16f706a3a55f7aac8e457e", "text": "DeleteEvent\u200b\n\nFired when a file is deleted\n\neventType Delete node FsNode\n\nDirectoryChildNode\u200b\n\nA directory child node - a file or a folder.\n\nfilename string type FsNodeType\n\nFsNode\u200b\n\nA base interface for nodes, just includes\nthe type of the node and the path, This interface\ndoes not expose the node's content/children\n\npath string type FsNodeType\n\nFsNodeType\u200b\n\nA Filesystem node type\n\n\n\nMoveEvent\u200b\n\nFired when a file is moved\n\neventType Move node FsNode to string\n\nTextChange\u200b\n\nA written text change for the WriteChange function exposed by WatchTextFileListeners.onReady\n\nfrom number insert? string to? number\n\nTextFileOnChangeEvent\u200b\n\nSignifies a change when a text file's text content is updated\n\nchanges TextChange[] latestContent string\n\nTextFileReadyEvent\u200b\n\nA set of listeners and values exposed by WatchTextFileListeners.onReady\n\ngetLatestContent GetLatestContent initialContent string writeChange WriteChange\n\nWatchDirListeners\u200b\n\nA set of listeners for watching a directory\n\nonChange WatchDirOnChangeListener onError WatchDirOnErrorListener onMoveOrDelete? WatchDirOnMoveOrDeleteListener\n\nWatchFileListeners\u200b\n\nA set of listeners for watching a non-text file<T extends string | Blob = string>\n\nonChange WatchFileOnChangeListener<T> onError? WatchFileOnErrorListener onMoveOrDelete? WatchFileOnMoveOrDeleteListener\n\nWatchTextFileListeners\u200b\n\nA set of listeners for watching a text file\n\nonChange? WatchTextFileOnChangeListener onError? WatchTextFileOnErrorListener onMoveOrDelete? WatchTextFileOnMoveOrDeleteListener onReady WatchTextFileOnReadyListener\n\nChangeEventType\u200b\n\nA file change event type\n\nCreate\n\n'CREATE'\n\nDelete\n\n'DELETE'\n\nModify\n\n'MODIFY'\n\nMove\n\n'MOVE'\n\nFsNodeType\u200b\n\nA Filesystem node type\n\nDirectory\n\n'DIRECTORY'\n\nFile\n\n'FILE'\n\nDisposerFunction\u200b\n\nA cleanup/disposer function (void)\n\n=>\n\nvoid\n\nFsNodeArray\u200b\n\nArray\n\nFsNode\n\nGetLatestContent\u200b\n\nReturns the latest content of a watched file as a string\n\n=>\n\nstring\n\nWatchDirOnChangeListener\u200b\n\nFires when a directory's child nodes change\n\nchildren\n\nFsNodeArray\n\n=>\n\nvoid\n\nWatchDirOnErrorListener\u200b\n\nFires when watching a directory fails\n\nerr\n\nError\n\nextraInfo\n\nRecord\n\n=>\n\nvoid\n\nWatchDirOnMoveOrDeleteListener\u200b\n\nFires when a watched directory is moved or deleted\n\nevent\n\nDeleteEvent\n\nMoveEvent\n\n=>\n\nvoid\n\nWatchFileOnChangeListener\u200b\n\nFires when a non-text file is changed\n\nnewContent\n\n=>\n\nvoid\n\nWatchFileOnErrorListener\u200b\n\nFires when watching a non-text file fails\n\nerror\n\nstring\n\n=>\n\nvoid\n\nWatchFileOnMoveOrDeleteListener\u200b\n\nFires when a non-text file is moved or deleted\n\nmoveOrDeleteEvent\n\nMoveEvent\n\nDeleteEvent\n\n=>\n\nvoid\n\nWatchTextFileOnChangeListener\u200b\n\nFires when a watched text file's text content is updated\n\nchangeEvent\n\nTextFileOnChangeEvent\n\n=>\n\nvoid\n\nWatchTextFileOnErrorListener\u200b\n\nFires when watching a text file fails\n\nerror\n\nstring\n\n=>\n\nvoid\n\nWatchTextFileOnMoveOrDeleteListener\u200b\n\nFires when a watched text file is moved or deleted\n\nmoveOrDeleteEvent\n\nMoveEvent\n\nDeleteEvent\n\n=>\n\nvoid\n\nWatchTextFileOnReadyListener\u200b\n\nFires when a text file watcher is ready\n\nreadyEvent\n\nTextFileReadyEvent\n\n=>\n\nvoid\n\nWriteChange\u200b\n\nWrites a change to a watched file using the TextChange interface\n\nchanges\n\nTextChange\n\nArray\n\nTextChange\n\n=>\n\nvoid\n\nUsage\n\nMethodsfs.readFilefs.writeFilefs.readDirfs.createDirfs.deleteFilefs.deleteDirfs.movefs.copyFilefs.watchFilefs.watchDirfs.watchTextFile\n\nTypesChangeEventTypeDeleteEventDirectoryChildNodeFsNodeFsNodeTypeMoveEventTextChangeTextFileOnChangeEventTextFileReadyEventWatchDirListenersWatchFileListenersWatchTextFileListenersChangeEventTypeFsNodeTypeDisposerFunctionFsNodeArrayGetLatestContentWatchDirOnChangeListenerWatchDirOnErrorListenerWatchDirOnMoveOrDeleteListenerWatchFileOnChangeListenerWatchFileOnErrorListenerWatchFileOnMoveOrDeleteListenerWatchTextFileOnChangeListenerWatchTextFileOnErrorListenerWatchTextFileOnMoveOrDeleteListenerWatchTextFileOnReadyListenerWriteChange", "start_char_idx": 1359, "end_char_idx": 5241, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"d0bbf8e0-77bd-43e9-8e04-d8ff7a090d97": {"node_ids": ["649540b6-de72-4178-a7bf-e0cfd107733e", "b1d9a0f5-c82f-4198-8c24-6aa36981ca9a"], "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/extensions/api/fs.html"}}}, "docstore/metadata": {"649540b6-de72-4178-a7bf-e0cfd107733e": {"doc_hash": "126073c00071798db562fe13a1d7a7543234f36bbecdcb2cf0dc78ee095930ed", "ref_doc_id": "d0bbf8e0-77bd-43e9-8e04-d8ff7a090d97"}, "b1d9a0f5-c82f-4198-8c24-6aa36981ca9a": {"doc_hash": "9cc2c1fd12ed84b8c24a2e2aab100f64a85d33262a16f706a3a55f7aac8e457e", "ref_doc_id": "d0bbf8e0-77bd-43e9-8e04-d8ff7a090d97"}}}