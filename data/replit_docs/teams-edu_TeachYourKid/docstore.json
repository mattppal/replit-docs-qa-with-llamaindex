{"docstore/data": {"32deeff3-d7b0-451d-82f7-8b29d492bc14": {"__data__": {"id_": "32deeff3-d7b0-451d-82f7-8b29d492bc14", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/teams-edu/TeachYourKid.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2543bcff-93f9-433f-9920-187e3a7cbaff", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/teams-edu/TeachYourKid.html"}, "hash": "97a7ea9d6e91cc21f59dffa07206eae922233e8fb68b3b599d1b6c99f241b214", "class_name": "RelatedNodeInfo"}}, "hash": "087ded06d1403f37c751fbb099943b377c3ef6019227840867267636a63d15f2", "text": "You can explain to your child how this code works line by line so that they can try it with their turtle next.\n\nNow your child can take the driver's seat and you can help them as much or as little as needed to write code similar to the following (directly below your existing code).\n\nkid\n\nright\n\n90\n\nkid\n\nforward\n\n120\n\nkid\n\nleft\n\n90\n\nkid\n\nforward\n\n200\n\nWith the above code the black turtle will turn right (facing down), move to the same level as the gap in the red line, turn left and move forward through the gap.\n\nIf your child likes solving these mazes and you get tired of creating them, you can use Python's random module to help with drawing random mazes.\n\nBuilding interactive games with Python Play\u200b\n\nPython Play is an abstraction layer built on top of PyGame that makes it easy to build a more advanced game than with Turtle, but without needing to understand all of the concepts required for PyGame.\n\nIf you want something almost as simple as Turtle, but with more advanced options, like easy handling of input through your mouse or keyboard, this is a good option to introduce before something more advanced such as PyGame.\n\nFork this repl which is a simple game that shows how to process mouse input.\n\nThe cat moves randomly around the screen, and the player has to click on the cat within 15 flashes to win.\n\nYou could show your child how to:\n\nChange the characters that make up the cat\u200b\n\nBy modifying the line\n\ncat\n\nplay\n\nnew_text\n\n'=^.^='\n\nfont_size\n\n70\n\nMake the game easier or harder\u200b\n\nEspecially if you are using a computer with a trackpad or otherwise find that your mouse is not sensitive enough, you can make the game easier in a few different ways:\n\nBy modifying the number of seconds the cat is shown for in the following code.\n\ncat\n\nshow\n\ncats_shown\n\n+=\n\nawait\n\nplay\n\ntimer\n\nseconds\n\n0.6\n\nOr by increasing/decreasing the number of flashes allowed before the game ends by modifying the following code.\n\nif\n\ncats_shown\n\n>=\n\n15\n\ncat\n\nwords\n\n'Game over!'\n\nOr by making the font size larger in the initial definition of the cat.\n\nBuild an entirely new game\u200b\n\nOnce you're both comfortable with the Python Play syntax that makes up this game, take a look at all the building blocks available in the documentation and build something fun!\n\nBuilding more advanced games with PyGame\u200b\n\nPyGame is more complicated than Python Play, but it also has a larger community and many pre-built examples that you can use as a starting point.\n\nIt's likely that your child will benefit from starting out with some easier libraries and moving up to Python Play over time. But if you want to jump in the deep end, we also have a detailed tutorial on how to build a juggling game in PyGame.\n\nDrawing on a blank canvas with Basic\u200b\n\nProgramming used to look pretty different. Older languages like BASIC relied heavily on GOTO statements and other constructs that are rarely seen in more modern languages.\n\nHowever, these constructs are also \"closer to the metal\" and they can help beginners understand how things like program flow actually work under the hood.\n\nClassic Basic on Replit combines the syntax of BASIC with some more modern features for the best of both worlds.\n\nAt its simplest, it can be used like Microsoft Paint: to draw pixel by pixel on a canvas, but using code instead of your mouse.\n\nHere's a starter example showing how to draw a dog pixel by pixel and then add a line using a for loop.\n\nFork this repl so that you and your child can draw together using code.\n\nBasic is definitely not limited to only drawing static pictures. For more inspiration, take a look at this repl of a full snake game.\n\nWhere next?\u200b\n\nOnce your child understands the basics of programming they can move on to work through our tutorials.\n\nWhile games are often a good way to get children hooked on programming, many children also prefer building non-game programs. See whether they are most interested in games, web application development or even something like data visualisation and then double down on finding more examples that match their interests.\n\nIt is also a good time to introduce kids to 'computational thinking'. CS Unplugged is a good resource for teaching beginners the foundations of computer science without a computer.\n\n< Previous: How to create a good enrichment coding assignment using Replit\n\nNext: Keeping notes in repls >\n\nWas this helpful?\n\nLast updated on Aug 31, 2023\n\nThe benefits of teaching children to code\n\nGetting started\n\nDrawing with Python Turtle\n\nBuilding interactive games with Python Play\n\nBuilding more advanced games with PyGame\n\nDrawing on a blank canvas with Basic\n\nWhere next?", "start_char_idx": 0, "end_char_idx": 4613, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"2543bcff-93f9-433f-9920-187e3a7cbaff": {"node_ids": ["32deeff3-d7b0-451d-82f7-8b29d492bc14"], "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/teams-edu/TeachYourKid.html"}}}, "docstore/metadata": {"32deeff3-d7b0-451d-82f7-8b29d492bc14": {"doc_hash": "087ded06d1403f37c751fbb099943b377c3ef6019227840867267636a63d15f2", "ref_doc_id": "2543bcff-93f9-433f-9920-187e3a7cbaff"}}}