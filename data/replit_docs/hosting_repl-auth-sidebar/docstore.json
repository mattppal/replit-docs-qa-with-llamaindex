{"docstore/data": {"dfc96717-066a-4dc1-be92-cf50036b44ea": {"__data__": {"id_": "dfc96717-066a-4dc1-be92-cf50036b44ea", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/hosting/repl-auth-sidebar.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0927546f-9b43-4279-8652-150d02f20688", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/hosting/repl-auth-sidebar.html"}, "hash": "bf12f453ffa3af94fb00aee861c04fb48df164dadcea940c493af05e681e4eb0", "class_name": "RelatedNodeInfo"}}, "hash": "6905ee7708275b67118e1dbc2a3e91e76531642fda7acb35c60d0ac3e2534cad", "text": "profileImage\n\nbio\n\nurl\n\nroles\n\nteams\n\nGetting user info from the client side\u200b\n\nTo access user info on the client side, we send a GET request to /__replauthuser. We are then returned a JSON object that contains the user information.\n\nIf you are in HTML:\u200b\n\nYou can simply insert the code snippet listed under \"usage\" in the sidebar. See our HTML example at the bottom of the page for more information.\n\nIf you are not in HTML:\u200b\n\nYou will have to send your own fetch request to /__replauthuser. To help you out, we've included a javascript implementation of the login function below. See our React example at the bottom of the page for more information.\n\nasync function getUserInfo() {\n\nreturn await fetch('/__replauthuser')\n\nGetting user info from the server side\u200b\n\nTo access user info on the server side, we can access the following request headers:\n\nX-Replit-User-Id\n\nX-Replit-User-Name\n\nX-Replit-User-Profile-Image\n\nX-Replit-User-Bio\n\nX-Replit-User-Url\n\nX-Replit-User-Roles\n\nX-Replit-User-Teams\n\nIf you are in NodeJS:\u200b\n\nYou can simply insert the code snippets listed under \"usage\" in the sidebar. See our NodeJS example at the bottom of the page for more information.\n\nIf you are not in NodeJS:\u200b\n\nYou will have to access the request headers on your own. To help you out, we've included a javascript implementation of the login function below. See our Python Flask example at the bottom of the page for more information.\n\nExamples\u200b\n\nCheck out these examples to see Repl Auth in action!\n\nHTML Repl with Custom Button\u200b\n\nReact Repl with Custom Button\u200b\n\nNodeJS Repl with Custom Button\u200b\n\nPython Flask Repl with Custom Button\u200b\n\n< Previous: Authenticating users with Repl Auth\n\nNext: Streaming native graphics using VNC >\n\nWas this helpful?\n\nLast updated on Aug 31, 2023\n\nSetup\n\nThe \"Log in with Replit\" Sidebar\n\nUsing a prebuilt login page (the easy way)\n\nUsing a custom login button (the advanced way)If you are using HTML:If you are not using HTML:\n\nGetting user infoGetting user info from the client sideGetting user info from the server side\n\nExamplesHTML Repl with Custom ButtonReact Repl with Custom ButtonNodeJS Repl with Custom ButtonPython Flask Repl with Custom Button", "start_char_idx": 0, "end_char_idx": 2172, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"0927546f-9b43-4279-8652-150d02f20688": {"node_ids": ["dfc96717-066a-4dc1-be92-cf50036b44ea"], "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/hosting/repl-auth-sidebar.html"}}}, "docstore/metadata": {"dfc96717-066a-4dc1-be92-cf50036b44ea": {"doc_hash": "6905ee7708275b67118e1dbc2a3e91e76531642fda7acb35c60d0ac3e2534cad", "ref_doc_id": "0927546f-9b43-4279-8652-150d02f20688"}}}