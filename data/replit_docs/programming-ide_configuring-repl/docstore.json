{"docstore/data": {"77ebe0f0-7213-417d-b601-bdf898f76894": {"__data__": {"id_": "77ebe0f0-7213-417d-b601-bdf898f76894", "embedding": null, "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/programming-ide/configuring-repl.html"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a80c0fce-4b3d-487a-a79f-76f10cd58323", "node_type": "4", "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/programming-ide/configuring-repl.html"}, "hash": "d0e12265844ceb1cdc03b836b7a17f2c31f0ec1ce4c0d1f64cce91f681edeca5", "class_name": "RelatedNodeInfo"}}, "hash": "71982c20de814c003f2ed0aed17003aaec0c99113ed109e9ec39e6d0be02bb18", "text": "Determines which port should be exposed as your Repl's web output.\n\n[[ports]]\n\nlocalPort = 3000\n\nexternalPort = 8099\n\n[extension]\u200b\n\nSpecifies whether a Repl is a Workspace Extension.\n\nisExtension\u200b\n\nShould be set to true in an extension Repl. This makes the Extension Devtools accessible and optimizes the workspace for developing extensions.\n\n[extension]\n\nisExtension = true\n\nextensionID\u200b\n\nDetermines if a Repl is attached to a specific extension. If unset, publishing your Extension creates a new extension and automatically fills extensionID for you.\n\n[extension]\n\nextensionID = \"492a5fcd-f090-4356-ace8-50755e8deb2b\"\n\nbuildCommand\u200b\n\nThis command is run to bundle your extension into a static directory (specified by outputDirectory below), which is then uploaded to Replit as an Extension.\n\n[extension]\n\nbuildCommand = \"npm run build\"\n\noutputDirectory\u200b\n\nThe path to the static directory that should be used to render the Extension. This path is relative to your Repl's root directory.\n\n[extension]\n\noutputDirectory = \"./dist\"\n\n[env]\u200b\n\nA key-value object of environment variables. For sensitive environment variables, use Secrets instead\n\n[env]\n\nVIRTUAL_ENV = \"/home/runner/${REPL_SLUG}/venv\"\n\nPATH = \"${VIRTUAL_ENV}/bin\"\n\nPYTHONPATH=\"${VIRTUAL_ENV}/lib/python3.8/site-packages\"\n\n[unitTest]\u200b\n\nIf set, enables unit testing for the Repl.\n\nlanguage\u200b\n\nThe language for unit tests. Unit testing is only available for java, python, and nodejs.\n\n[unitTest]\n\nlanghage = \"nodejs\"\n\n[interpreter]\u200b\n\nSpecifies the interpreter, which should be a compliant prybar binary.\n\ncommand\u200b\n\nStarts the interpreter. Overrides the run command if set.\n\n[interpreter]\n\ncommand = [\n\n\"prybar-nodejs\",\n\n\"-q\",\n\n\"--ps1\",\n\n\"\\u0001\\u001b[33m\\u0002\ueea7\\u0001\\u001b[00m\\u0002 \",\n\n\"-i\"\n\nprompt\u200b\n\nA list of bytes used to detect running state, if unspecified it defaults to [0xEE, 0xA7].\n\n[interpreter]\n\nprompt = [0xEE, 0xA7]\n\n[packager]\u200b\n\nIf set, enables package management with the Packager .\n\nafterInstall\u200b\n\nIf set, is executed after a new package is installed via the Packager.\n\n[packager]\n\nafterInstall = \"echo 'package installed'\"\n\nignoredPaths\u200b\n\nA list of paths to ignore while attempting to guess packages.\n\n[packager]\n\nignoredPaths = [\".git\"]\n\nignoredPackages\u200b\n\nA list of modules to never attempt to guess a package for, when installing packages.\n\n[packager]\n\nignoredPackages = [\"twitter\", \"discord\"]\n\nlanguage\u200b\n\nSpecifies the language to use for package operations. See available languages in the Universal Package Manager repository.\n\n[packager]\n\nlanguage = \"python\"\n\n[packager.features]\u200b\n\nUPM features that are supported by the specified languages.\n\npackageSearch\u200b\n\nWhen set to true, enables support for the Packager.\n\n[packager]\n\nlanguage = \"python3\"\n\n[packager.features]\n\npackageSearch = true\n\nguessImports\u200b\n\nWhen set to true, UPM will attempt to guess which packages need to be installed prior to running the Repl.\n\n[packager]\n\nlanguage = \"python3\"\n\n[packager.features]\n\nguessImports = true\n\nenabledForHosting\u200b\n\nSets whether hosting the Repl requires running a package installation operation.\n\n[packager]\n\nlanguage = \"python3\"\n\n[packager.features]\n\nenabledForHosting = false\n\n[deployment]\u200b\n\nrun\u200b\n\nThe command that executes when a Deployment container starts.\n\n[deployment]\n\nrun = \"npm start\"\n\nbuild\u200b\n\nThe command that executes before running a Deployment.\n\n[deployment]\n\nbuild = \"npm run build\"\n\nignorePorts\u200b\n\nIf true, we won't check if a Repl has opened a port in order to deem a deployment as successful.\n\n[deployment]\n\nignorePorts = true\n\n< Previous: Introduction to the Workspace\n\nNext: Using Nix with Replit >\n\nWas this helpful?\n\nLast updated on Aug 31, 2023\n\nrun\n\nonBoot\n\ncompile\n\nlanguage\n\nentrypoint\n\nhidden\n\naudio\n\n[languages][languages.<language name>][languages.<language name>.languageServer]\n\n[[hints]]\n\n[nix]channel\n\n[[ports]]Supported portslocalPortexternalPort\n\n[extension]isExtensionextensionIDbuildCommandoutputDirectory\n\n[env]\n\n[unitTest]language\n\n[interpreter]commandprompt\n\n[packager]afterInstallignoredPathsignoredPackageslanguage[packager.features]\n\n[deployment]runbuildignorePorts", "start_char_idx": 0, "end_char_idx": 4080, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"a80c0fce-4b3d-487a-a79f-76f10cd58323": {"node_ids": ["77ebe0f0-7213-417d-b601-bdf898f76894"], "metadata": {"path": "/home/runner/replit-docs-qa-with-llamaindex/docs.replit.com/programming-ide/configuring-repl.html"}}}, "docstore/metadata": {"77ebe0f0-7213-417d-b601-bdf898f76894": {"doc_hash": "71982c20de814c003f2ed0aed17003aaec0c99113ed109e9ec39e6d0be02bb18", "ref_doc_id": "a80c0fce-4b3d-487a-a79f-76f10cd58323"}}}